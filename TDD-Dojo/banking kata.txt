Banking Exercise



An owner of a bank has recently decided to expose their banking
functionality over a web based interface to reach a larger audience. You
have been brought in to work on the core object model that will be
leveraged from the user interface layer. The bank owner presents you with
a list of the following stories that the object model needs to
accommodate. For the purpose of this exercise a simple console application
will suffice. If possible, use this as an excuse to get acquainted with an
automated testing framework, and forgo the need for a console front end.



*      A bank manager should be able to get a list of all the account holders that bank with the bank.

*      An account holder should be able to get the current balance of their account.

*      An account holder can withdraw money, up to the balance, from their account

*      An account holder can request a transfer of money between their
account and the account of another account holder, upto the balance of the
account being transferred from.

*      An account holder can  get the current balance of their account in a different currency (let's stick to US and CAD).

*      A bank manager can get the balance for any account as of a certain date.

*      A bank manager can get a list of :

o   The Top Five Account Holders (Based on Balance) - Sorted by balance descending

o    The Bottom Five Account Holders (Based on Balance), sorted by balance ascending

*      For the purpose of simplicity, an account holder can have at most 1 account.
